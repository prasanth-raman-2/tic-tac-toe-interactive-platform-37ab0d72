{"is_source_file": true, "format": "Python", "description": "Main application file for Tic Tac Toe API using FastAPI framework, includes endpoints for managing players and game states.", "external_files": ["src/database", "src/models", "src/schemas", "src/game_logic"], "external_methods": ["fastapi.FastAPI", "fastapi.middleware.cors.CORSMiddleware", "sqlalchemy.orm.Session", "src.database.get_db", "src.models.Player", "src.models.Game", "src.game_logic.TicTacToeGame.create_empty_board", "src.game_logic.TicTacToeGame.make_move", "src.game_logic.TicTacToeGame.get_game_status"], "published": ["app", "health_check", "create_player", "get_players", "create_game", "get_game", "make_move", "get_games"], "classes": [], "methods": [{"name": "health_check()", "description": "Health check endpoint that returns the status of the API.", "scope": "", "scopeKind": ""}, {"name": "create_player(player: schemas.PlayerCreate, db: Session = Depends(get_db))", "description": "Creates a new player in the database.", "scope": "", "scopeKind": ""}, {"name": "get_players(db: Session = Depends(get_db))", "description": "Retrieves a list of all players.", "scope": "", "scopeKind": ""}, {"name": "create_game(game: schemas.GameCreate, db: Session = Depends(get_db))", "description": "Creates a new game with the specified players.", "scope": "", "scopeKind": ""}, {"name": "get_game(game_id: int, db: Session = Depends(get_db))", "description": "Retrieves the state of a game by ID.", "scope": "", "scopeKind": ""}, {"name": "make_move(game_id: int, move: schemas.GameMove, db: Session = Depends(get_db))", "description": "Processes a player's move in the game.", "scope": "", "scopeKind": ""}, {"name": "get_games(db: Session = Depends(get_db))", "description": "Retrieves all games.", "scope": "", "scopeKind": ""}], "calls": ["db.query(models.Player).filter(models.Player.id == game.player1_id).first()", "db.query(models.Player).filter(models.Player.id == game.player2_id).first()", "db.query(models.Game).filter(models.Game.id == game_id).first()", "db.query(models.Game).filter(models.Game.id == game_id).first()", "db.add(db_player)", "db.commit()", "db.refresh(db_player)", "db.add(db_game)", "db.commit()", "db.refresh(db_game)"], "search-terms": ["Tic Tac Toe API", "FastAPI", "Player Management", "Game State Management"], "state": 2, "file_id": 3, "knowledge_revision": 21, "git_revision": "e678dd8f452d4b69352c0c200955c7a58175eed8", "revision_history": [{"9": "6f3f24bbe46b7e3c691c253cb978c5f62440e0ab"}, {"18": "6f3f24bbe46b7e3c691c253cb978c5f62440e0ab"}, {"21": "e678dd8f452d4b69352c0c200955c7a58175eed8"}], "ctags": [{"_type": "tag", "name": "app", "path": "/tmp/kavia/workspace/code-generation/tic-tac-toe-interactive-platform-37ab0d72/tic_tac_toe_backend/src/api/main.py", "pattern": "/^app = FastAPI($/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "create_game", "path": "/tmp/kavia/workspace/code-generation/tic-tac-toe-interactive-platform-37ab0d72/tic_tac_toe_backend/src/api/main.py", "pattern": "/^def create_game(game: schemas.GameCreate, db: Session = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(game: schemas.GameCreate, db: Session = Depends(get_db))"}, {"_type": "tag", "name": "create_player", "path": "/tmp/kavia/workspace/code-generation/tic-tac-toe-interactive-platform-37ab0d72/tic_tac_toe_backend/src/api/main.py", "pattern": "/^def create_player(player: schemas.PlayerCreate, db: Session = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(player: schemas.PlayerCreate, db: Session = Depends(get_db))"}, {"_type": "tag", "name": "get_game", "path": "/tmp/kavia/workspace/code-generation/tic-tac-toe-interactive-platform-37ab0d72/tic_tac_toe_backend/src/api/main.py", "pattern": "/^def get_game(game_id: int, db: Session = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(game_id: int, db: Session = Depends(get_db))"}, {"_type": "tag", "name": "get_games", "path": "/tmp/kavia/workspace/code-generation/tic-tac-toe-interactive-platform-37ab0d72/tic_tac_toe_backend/src/api/main.py", "pattern": "/^def get_games(db: Session = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(db: Session = Depends(get_db))"}, {"_type": "tag", "name": "get_players", "path": "/tmp/kavia/workspace/code-generation/tic-tac-toe-interactive-platform-37ab0d72/tic_tac_toe_backend/src/api/main.py", "pattern": "/^def get_players(db: Session = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(db: Session = Depends(get_db))"}, {"_type": "tag", "name": "health_check", "path": "/tmp/kavia/workspace/code-generation/tic-tac-toe-interactive-platform-37ab0d72/tic_tac_toe_backend/src/api/main.py", "pattern": "/^def health_check():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "make_move", "path": "/tmp/kavia/workspace/code-generation/tic-tac-toe-interactive-platform-37ab0d72/tic_tac_toe_backend/src/api/main.py", "pattern": "/^def make_move(game_id: int, move: schemas.GameMove, db: Session = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(game_id: int, move: schemas.GameMove, db: Session = Depends(get_db))"}], "hash": "13188eb7977306fcbb818b110200936d", "format-version": 4, "code-base-name": "tic_tac_toe_backend", "filename": "tic_tac_toe_backend/src/api/main.py", "fields": [{"name": "app = FastAPI(", "scope": "", "scopeKind": "", "description": "unavailable"}]}