{"is_source_file": true, "format": "Python", "description": "This file contains the TicTacToeGame class, which includes methods for managing the game logic of a Tic Tac Toe game, such as creating a game board, making moves, checking for a winner, and getting the game status.", "external_files": [], "external_methods": [], "published": ["TicTacToeGame"], "classes": [{"name": "TicTacToeGame", "description": "Class that encapsulates the logic for a Tic Tac Toe game."}], "methods": [{"name": "List[List[Optional[str]]] create_empty_board()", "description": "Creates and returns an empty 3x3 game board.", "scope": "TicTacToeGame", "scopeKind": "class"}, {"name": "bool make_move(board: List[List[Optional[str]]], row: int, col: int, player: int)", "description": "Attempts to make a move on the board for the given player; returns whether the move was successful.", "scope": "TicTacToeGame", "scopeKind": "class"}, {"name": "Optional[str] check_winner(board: List[List[Optional[str]]])", "description": "Checks the board for a winner and returns the winner if there is one.", "scope": "TicTacToeGame", "scopeKind": "class"}, {"name": "bool is_board_full(board: List[List[Optional[str]]])", "description": "Checks if the game board is full.", "scope": "TicTacToeGame", "scopeKind": "class"}, {"name": "Tuple[bool,Optional[str],bool] get_game_status(board: List[List[Optional[str]]])", "description": "Determines the game status, including whether it is completed, who the winner is, and whether it is a draw.", "scope": "TicTacToeGame", "scopeKind": "class"}], "calls": ["TicTacToeGame.check_winner", "TicTacToeGame.is_board_full"], "search-terms": ["TicTacToeGame", "game logic", "Tic Tac Toe"], "state": 2, "file_id": 8, "knowledge_revision": 17, "git_revision": "", "ctags": [{"_type": "tag", "name": "TicTacToeGame", "path": "/tmp/kavia/workspace/code-generation/tic-tac-toe-interactive-platform-37ab0d72/tic_tac_toe_backend/src/game_logic.py", "pattern": "/^class TicTacToeGame:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "check_winner", "path": "/tmp/kavia/workspace/code-generation/tic-tac-toe-interactive-platform-37ab0d72/tic_tac_toe_backend/src/game_logic.py", "pattern": "/^    def check_winner(board: List[List[Optional[str]]]) -> Optional[str]:$/", "language": "Python", "typeref": "typename:Optional[str]", "kind": "member", "signature": "(board: List[List[Optional[str]]])", "scope": "TicTacToeGame", "scopeKind": "class"}, {"_type": "tag", "name": "create_empty_board", "path": "/tmp/kavia/workspace/code-generation/tic-tac-toe-interactive-platform-37ab0d72/tic_tac_toe_backend/src/game_logic.py", "pattern": "/^    def create_empty_board() -> List[List[Optional[str]]]:$/", "language": "Python", "typeref": "typename:List[List[Optional[str]]]", "kind": "member", "signature": "()", "scope": "TicTacToeGame", "scopeKind": "class"}, {"_type": "tag", "name": "get_game_status", "path": "/tmp/kavia/workspace/code-generation/tic-tac-toe-interactive-platform-37ab0d72/tic_tac_toe_backend/src/game_logic.py", "pattern": "/^    def get_game_status(board: List[List[Optional[str]]]) -> Tuple[bool, Optional[str], bool]:$/", "language": "Python", "typeref": "typename:Tuple[bool,Optional[str],bool]", "kind": "member", "signature": "(board: List[List[Optional[str]]])", "scope": "TicTacToeGame", "scopeKind": "class"}, {"_type": "tag", "name": "is_board_full", "path": "/tmp/kavia/workspace/code-generation/tic-tac-toe-interactive-platform-37ab0d72/tic_tac_toe_backend/src/game_logic.py", "pattern": "/^    def is_board_full(board: List[List[Optional[str]]]) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "member", "signature": "(board: List[List[Optional[str]]])", "scope": "TicTacToeGame", "scopeKind": "class"}, {"_type": "tag", "name": "make_move", "path": "/tmp/kavia/workspace/code-generation/tic-tac-toe-interactive-platform-37ab0d72/tic_tac_toe_backend/src/game_logic.py", "pattern": "/^    def make_move(board: List[List[Optional[str]]], row: int, col: int, player: int) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "member", "signature": "(board: List[List[Optional[str]]], row: int, col: int, player: int)", "scope": "TicTacToeGame", "scopeKind": "class"}], "hash": "13b7af55c488c80c69dd641ed2ff45b3", "format-version": 4, "code-base-name": "tic_tac_toe_backend", "filename": "tic_tac_toe_backend/src/game_logic.py", "revision_history": [{"17": ""}]}